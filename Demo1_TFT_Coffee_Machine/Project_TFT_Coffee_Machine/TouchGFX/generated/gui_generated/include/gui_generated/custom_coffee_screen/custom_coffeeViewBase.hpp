/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CUSTOM_COFFEEVIEWBASE_HPP
#define CUSTOM_COFFEEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/custom_coffee_screen/custom_coffeePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/Image.hpp>

class custom_coffeeViewBase : public touchgfx::View<custom_coffeePresenter>
{
public:
    custom_coffeeViewBase();
    virtual ~custom_coffeeViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void no_coffee_button_pressed()
    {
        // Override and implement this function in custom_coffee
    }
    virtual void enter_name_pressed()
    {
        // Override and implement this function in custom_coffee
    }
    virtual void save_button_pressed()
    {
        // Override and implement this function in custom_coffee
    }
    virtual void cancel_button_pressed()
    {
        // Override and implement this function in custom_coffee
    }
    virtual void adjust_slider2(int value)
    {
        // Override and implement this function in custom_coffee
    }
    virtual void adjust_slider1(int value)
    {
        // Override and implement this function in custom_coffee
    }
    virtual void adjust_slider3(int value)
    {
        // Override and implement this function in custom_coffee
    }
    virtual void left_button_pressed()
    {
        // Override and implement this function in custom_coffee
    }
    virtual void right_button_pressed()
    {
        // Override and implement this function in custom_coffee
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea no_coffee_text_1;
    touchgfx::TextArea no_coffee_text_2;
    touchgfx::Box box2;
    touchgfx::TextArea no_custom_coffee_text;
    touchgfx::ClickListener< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  > no_coffee_button;
    touchgfx::ClickListener< touchgfx::Slider > slider1;
    touchgfx::TextAreaWithOneWildcard textArea2;
    touchgfx::TextAreaWithOneWildcard textArea3;
    touchgfx::TextAreaWithOneWildcard textArea4;
    touchgfx::TextArea textArea7;
    touchgfx::ClickListener< touchgfx::Slider > slider2;
    touchgfx::ClickListener< touchgfx::Slider > slider3;
    touchgfx::Box box3;
    touchgfx::TextAreaWithOneWildcard textArea9;
    touchgfx::Box box4;
    touchgfx::Box box5;
    touchgfx::TextArea textArea10;
    touchgfx::TextArea textArea11;
    touchgfx::ClickListener< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  > enter_name_button;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  save_button;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  cancel_button;
    touchgfx::ClickListener< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  > flexButton1;
    touchgfx::MoveAnimator< touchgfx::TextAreaWithOneWildcard > coffee_name;
    touchgfx::ClickListener< touchgfx::Button > button1;
    touchgfx::Image image1;
    touchgfx::ClickListener< touchgfx::Button > button2;
    touchgfx::Image image2;
    touchgfx::MoveAnimator< touchgfx::TextAreaWithOneWildcard > coffee_name_2;
    touchgfx::MoveAnimator< touchgfx::TextAreaWithOneWildcard > coffee_name_3;
    touchgfx::MoveAnimator< touchgfx::TextAreaWithOneWildcard > coffee_name_4;
    touchgfx::MoveAnimator< touchgfx::TextAreaWithOneWildcard > coffee_name_5;
    touchgfx::MoveAnimator< touchgfx::Image > image3;
    touchgfx::MoveAnimator< touchgfx::Image > image4;
    touchgfx::MoveAnimator< touchgfx::Image > image5;
    touchgfx::MoveAnimator< touchgfx::Image > image6;
    touchgfx::MoveAnimator< touchgfx::Image > image7;
    touchgfx::Image image8;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  custom_coffee_back;
    touchgfx::ClickListener< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  > make_custom_coffee;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];
    static const uint16_t TEXTAREA3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea3Buffer[TEXTAREA3_SIZE];
    static const uint16_t TEXTAREA4_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea4Buffer[TEXTAREA4_SIZE];
    static const uint16_t TEXTAREA9_SIZE = 18;
    touchgfx::Unicode::UnicodeChar textArea9Buffer[TEXTAREA9_SIZE];
    static const uint16_t COFFEE_NAME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar coffee_nameBuffer[COFFEE_NAME_SIZE];
    static const uint16_t COFFEE_NAME_2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar coffee_name_2Buffer[COFFEE_NAME_2_SIZE];
    static const uint16_t COFFEE_NAME_3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar coffee_name_3Buffer[COFFEE_NAME_3_SIZE];
    static const uint16_t COFFEE_NAME_4_SIZE = 10;
    touchgfx::Unicode::UnicodeChar coffee_name_4Buffer[COFFEE_NAME_4_SIZE];
    static const uint16_t COFFEE_NAME_5_SIZE = 10;
    touchgfx::Unicode::UnicodeChar coffee_name_5Buffer[COFFEE_NAME_5_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<custom_coffeeViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<custom_coffeeViewBase, const touchgfx::Slider&, int> sliderValueConfirmedCallback;
    touchgfx::Callback<custom_coffeeViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CUSTOM_COFFEEVIEWBASE_HPP
